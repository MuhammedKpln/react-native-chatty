"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8094],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4133:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],s={},l="(Experimental) Image Upload Support",p={unversionedId:"features/image-uploads",id:"features/image-uploads",title:"(Experimental) Image Upload Support",description:"React native chatty",source:"@site/docs/features/image-uploads.md",sourceDirName:"features",slug:"/features/image-uploads",permalink:"/react-native-chatty/docs/features/image-uploads",editUrl:"https://github.com/MuhammedKpln/react-native-chatty/tree/main/docs/docs/features/image-uploads.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Haptic Feedback Support",permalink:"/react-native-chatty/docs/features/haptic-feedback"},next:{title:"Load Earlier Messages",permalink:"/react-native-chatty/docs/features/load-earlier-button"}},c={},u=[{value:"Install native dependencies",id:"install-native-dependencies",level:2},{value:"Usage",id:"usage",level:2}],d={toc:u};function m(e){var t=e.components,s=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"experimental-image-upload-support"},"(Experimental) Image Upload Support"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"React native chatty",src:n(6212).Z,width:"600",height:"1298"})),(0,i.kt)("h2",{id:"install-native-dependencies"},"Install native dependencies"),(0,i.kt)("p",null,"For Expo users: ",(0,i.kt)("inlineCode",{parentName:"p"},"npm i expo-image-picker")),(0,i.kt)("p",null,"for bare RN users: ",(0,i.kt)("inlineCode",{parentName:"p"},"npm i react-native-image-picker")),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Do not forget to run ",(0,i.kt)("inlineCode",{parentName:"p"},"pod install")," after installations."))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Firstly pass ",(0,i.kt)("inlineCode",{parentName:"li"},"enableImageUploads")," prop to Chatty instance as you seem example below."),(0,i.kt)("li",{parentName:"ol"},"This will allow users to pick a media, when user sends a message Chatty will return image as base64 on your custom send function. See example below.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport { Chatty } from 'react-native-chatty';\n\nexport default function MyReactPage() {\n  const [messages, setMessages] = useState()\n  const text = useRef()\n\n  const onPressSend = ({\n      text,\n      repliedTo,\n      // Here are user selected images.\n      media,\n    }) => {\n\n    // When user has pressed send button with selected image,\n    // you will get images inside media as base64.\n\n    // Afterwards you'll need to handle received image.\n\n\n    socket.send(data)\n  }\n\n  return (\n    <Chatty\n      enableImageUploads\n      messages={messages}\n      headerProps={{\n        id: 0,\n        username: \"Muhammed Kaplan\",\n        avatar: {\n          uri: \"https://blalala.com\"\n        }\n      }}\n      footerProps={{\n        // To prevent any unnecessary re-rendering, we're using ref instead of states.\n        onChangeText: (_text) => text.current = _text,\n        onPressSend\n      }}\n    />\n  );\n}\n")))}m.isMDXComponent=!0},6212:function(e,t,n){t.Z=n.p+"assets/images/imageUploader-3250f62b06ed1c43f17d35d393f08a56.gif"}}]);